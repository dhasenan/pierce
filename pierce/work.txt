DONE:
* Backend
	* Persistence
	* User registration
	* User login
	* Track read/unread
	* Autodetect feed
  * Reduce update interval if people unsubscribe / alter update interval
  * Feed deduplication
	* Modify feed
		* Change personally visible details
		* Change update interval
  * Atom
  * Default icon to site's favicon
* Frontend
  * Basic layout
  * Login
  * Register
  * Display single feed view
  * Mark read
  * New feed view
    * Multiple candidate feeds
  * Sorting
  * Unread counts
  * Display unread only
  * Links!
  * Modify feed view
    * Unsubscribe
    * Update interval
    * Show user-supplied title when available
  * Set page title
  * Add linked feed: update before returning
  * Favicon (crappy but whatevs!)
  * Default feed icon
  * Labels
    * Update title
    * Collapse/expand
  * Refreshing a feed manually results in it getting duplicated in the feed list.
  * Refreshing a feed seems to change all the article ids.
  * Support for common extensions
    * Wordpress
    * Feedburner
  * Support for bastard feeds (RSS + Atom)
  * Handle double-escaped html in atom feeds.
    * Heuristic: if it contains '<', don't unescape it again.
  * Keyboard shortcuts
    * Follow link in new tab
  * Deploy
    nginx + fastcgi server + startstopdaemon is trivial
  * Update labels
  * Change password
  * New feed: specify title, labels
  * Look for favicons more thoroughly -- specify precise feed, look for site favicon
  * Logging
  * Integrate Castle Windsor
* Bugs:
  * Title doesn't update when reloading stuff (incl. read/unread count) from server (eg open in two
    locations)
  * Click on a feed in second label: highlights every copy of that feed
  * Reading an article doesn't update label read counts
  * Reading an article doesn't update title when selecting a label
  * Keyboard shortcuts interfere with popup inputs
  * RSS feed can't be read: xml parse error (feed contains ASCII 0x10 "data link escape")
  * Selected item sometimes loses selection styling.
  * All/unread filtering doesn't work with labels
  * When switching between articles, I have to click the article box to make arrow key scrolling
    work
  * Article nav shortcuts don't pay attention to unread filtering
* Ugly:
  * On load, all popups are briefly visible.
  * Reset scrolling for article area when switching articles
  * Scroll to current article when using keyboard shortcuts
	

Personal:
  * Feed list going all the way to the bottom
  * Save/restore expanded feeds
  * Change feed url?
    Youtube feeds specifically.
  * Special youtube handling


Bugs:
  * Adding a feed doesn't seem to update the feed list.
  * Clicking on articles whose feeds have been updated seems not to mark those articles as read
  * Unsubscribing from a feed doesn't clear its articles from the article list.
  * Article nav shortcuts don't move to next/previous label
  * Article nav shortcuts don't ensure the selected article is visible


Ugly:
  * Expander button doesn't switch (plus/minus)
  * Resize handles are 1px wide.
  * 'Articles' label doesn't update (should have the feed/label name)
  * Menu icon is small, not really clear what it's for
  * Popup/icon theme doesn't mesh with rest of site
  * 'Uncategorized' shows up even when all feeds have labels.


Code quality:
  * Unify atom / rss parsing
  * Clean up ui/domain


Public launch:
  * Uncaught exceptions to SMTP appender
    log4net is configured at this point, but my ec2 instance isn't getting stuff to my gmail account
  * Ajax loading gifs
  * OAuth
  * HTTPS
	* Article search
	* Authentication double-check
  * Error handling / feedback
    * Butter bar!
    * Don't show login window when we fail to contact server
  * Documentation
    * Usage
      * Help menu
      * Butter bar stuff
  * Nicer timespan editor than 'X minutes'
  * Update article list after updating feeds / subscribing (check)
  * Mobile-optimized site
  * Mark all|selected read
  * Reduce initialization network usage
    I've jumped us past the one hurdle of loading all feeds in one request, but we still need to
      load everything in order to render the UI initially.
    Send less data.
      Trim each feed to entries from the past 60 days, up to 100; or the past 25 articles from all
      time (for instance). Maybe give an option to fetch older data (up to 1 year / 1000 articles?).
    Send more compact data.
      Gzip it.
      Remove unused fields -- though the major component is the description, which we can't fully
      eliminate.
    Send less data initially.
      Send a list of everything but the articles at first, and add in the unread count.
      Click on something, you get it loaded from the server.
  * Reduce ongoing network usage.
    Right now, it only reloads stuff that's been reread recently. That means an hour sitting idle
    will reload all your feeds with default settings. But a lot of feeds only get new articles once
    a day, or less often.
    * Only return the stuff that's newer than the last article you have.
    * Only update the minimum necessary to render the current view. Server-side maintenance of
      unread counts, for instance.


Dissemination:
  * Packaging and deployment
  * Setup docs


Monetization:
* Need:
  * Better splash screen (login/register)
    Requires someone else to help.
  * Payment integration
  * Personal name
  * Update name / email / etc
  * Logging (SMTP appender for high severity errors)
  * Registration tracking
  * Performance tracking (request latency, etc) + alarms
  * Help
  * Security testing
* Interesting:
  * Youtube user following
  * Twitter following
  * G+ following (can only do public feed)
  * Facebook following (probably the same)
  * Annotating articles
  * More sort/filter options?
  * What other data can we show?
  * Following a site that doesn't publish a feed
  * Android / iOS app
